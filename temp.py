import sys

def is_group(word: str) -> bool:
    seen = set()
    prev = ''
    for ch in word:
        if ch != prev:
            if ch in seen:
                return False
            seen.add(ch)
            prev = ch
    return True

N = int(sys.stdin.readline())
count = 0
for _ in range(N):
    word = sys.stdin.readline().strip()
    if is_group(word):
        count += 1
print(count)




'''

1316 그룹 단어 체커 

그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 
예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, 
kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만, 
aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다.

단어 N개를 입력으로 받아 그룹 단어의 개수를 출력하는 프로그램을 작성하시오.

입력
첫째 줄에 단어의 개수 N이 들어온다. N은 100보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 단어가 들어온다. 
단어는 알파벳 소문자로만 되어있고 중복되지 않으며, 길이는 최대 100이다.

출력
첫째 줄에 그룹 단어의 개수를 출력한다.
 
'''



'''
지침

코드는 python으로 작성한다.

N개의 입력을 받는 코드 작성. (sys.stdin.readline() 사용, N은 100보다 작거나 같은 자연수)

N개의 단어를 입력받아서, 그룹 단어인지 판별하고, 모든 입력을 처리한 뒤 결과로 첫째 줄에 그룹 단어의 개수를 출력하는게 목표.

시간제한이 2초이므로, 약 2억번의 연산까지 허용됨.

어떻게 그룹문자를 판별할 수 있나?

단순히 문자열의 모든 문자를 새로운 문자를 받을때마다 업데이트해서 저장하고, 뒤의 문자열까지 모조리 검사하는 브루트 포스 방식으로 일단 구현.

테스트 코드 작성: 단어의 길이가 1, 2, 99, 100인 문자열을 입력을 받아 테스트.

지시한대로만 코드 구현. 마음대로 코드를 추가하거나 빼지 않아야 함. 
사용자(나)는 정답 코드를 바로 작성하는게 아닌 계속 시도를 통해 체크하고 정답에 가까워지는 것을 선호. 설명은 사용자가 요청할때에만. 아니면 결과물만 제시.


'''